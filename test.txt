-- -----------------------------------------------------------------------------
-- Script name:   AVSA_AGGREGATE_nPVR_Recording_Retention.hql
-- Created on:    09/11/2015
-- Author:        Venkateswarlu, U.
-- Purpose:       Process to calculate the nPVR Delete Latency Aggregate table
-- -----------------------------------------------------------------------------

delete jar ${hivevar:PATH_SH}/scripts/shells/AVSA_UDF_Compiled_Code.jar;
add jar ${hivevar:PATH_SH}/scripts/shells/AVSA_UDF_Compiled_Code.jar;

drop temporary function GetDeleteLatency;
create temporary function GetDeleteLatency as 'com.accenture.AVSA.hive.UDF.GetDeleteLatency';

-- inserting data into table agg_npvr
INSERT INTO TABLE agg_npvr
SELECT   "nPVR Recording Retention"                 AS CONTEXT, 
         t2.daily_day                               AS DATE,
         ""                                         AS TIMEBAND,
         t1.channel                                 AS PLATFORM,
         nvl(t5.geography_id, 0)                    AS GEOGRAPHY_ID,
          t1.device_type                            AS DEVICE_TYPE,
         ""                                         AS STATUS,
         t1.epg_channel                             AS NPVR_CHANNEL,
         t1.epg_show                                AS NPVR_SHOW,
         ""                                         AS PLAY_LATENCY,
         GetDeleteLatency(t1.airing_starttime, t1.timestamp)                AS DELETION_LATENCY,
         ( IF(1 == 2, 1, NULL) )                   AS NPVR_REQUESTS,
         ( IF(1 == 2, 1, NULL) )                    AS NPVR_VIEWS,
         ( IF(1 == 2, 1, NULL) )                    AS NPVR_DURATION_MIN,
         count(t1.user_id)                          AS NPVR_DELETIONS,
         ( IF(1 == 2, 1, NULL) )                    AS MAX_CONCURRENCY_TIME_PEAK,
         ( IF(1 == 2, 1, NULL) )                    AS MAX_NPVR_CONCURRENCY
FROM  target_npvr t1 
       LEFT OUTER JOIN dim_calendar t2 
                    ON ( t1.dt_reference = t2.day_identifier )
       LEFT OUTER JOIN target_profiling t3
                    ON ( t1.user_id = t3.userid )
       LEFT OUTER JOIN dim_geography t5
                    ON ( t3.regionname = t5.continent )
                   AND ( t3.country = t5.state )
                   AND ( t3.state = t5.region )
       WHERE t1.dt_reference = ( date_sub(from_unixtime(unix_timestamp(), 'yyyy-MM-dd'), 1) )
       AND   t1.RECORDING_ACTION = "PLAY"   
GROUP  BY "nPVR Play Latency",
          t2.daily_day, 
          t1.channel, 
          nvl(t5.geography_id, 0),
          t1.device_type,
          t1.epg_channel,
          t1.epg_show,
          GetDeleteLatency(t1.airing_starttime, t1.timestamp);
          
