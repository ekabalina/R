-------------------------------------------------------------------------------
-- Script name:   AVSA_AGGREGATE_nPVR_Requests.hql
-- Created on:    05/11/2015
-- Author:        Venkateswarlu, U.
-- Purpose:       Process to calculate the nPVR Aggregate table
-------------------------------------------------------------------------------

delete jar hdfs:/tmp/jar/AVSA_UDF_Compiled_Codes.jar;
add jar hdfs:/tmp/jar/AVSA_UDF_Compiled_Codes.jar;

drop temporary function GetTimeBand;
create temporary function GetTimeBand as 'com.accenture.AVSA.hive.UDF.GetTimeBand';

-- inserting data into table agg_npvr
INSERT INTO TABLE agg_npvr

SELECT temp1.context           AS context, 
       temp1.date              AS date, 
       temp1.timeband          AS timeband, 
       temp1.platform          AS platform,
       temp1.geography_id      AS geography_id,       
       temp1.device_type       AS device_type, 
       temp1.status            AS status, 
       temp1.npvr_channel      AS npvr_channel, 
       temp1.npvr_show         AS npvr_show, 
       ( IF(1 == 2, 1, NULL) ) AS play_latency, 
       ( IF(1 == 2, 1, NULL) ) AS deletion_latency, 
       temp1.npvr_requests     AS npvr_requests, 
       ( IF(1 == 2, 1, NULL) ) AS npvr_views, 
       ( IF(1 == 2, 1, NULL) ) AS npvr_duration_min, 
       ( IF(1 == 2, 1, NULL) ) AS npvr_deletions, 
       ( IF(1 == 2, 1, NULL) ) AS max_concurrency_time_peak, 
       ( IF(1 == 2, 1, NULL) ) AS max_npvr_concurrency 
FROM   (SELECT t0.context, 
               t0.date, 
               t0.timeband,
               t0.geography_id,           
               t0.platform, 
               t0.device_type, 
               t0.status, 
               t0.npvr_channel, 
               t0.npvr_show, 
               count(t0.user_id) AS npvr_requests 
        FROM   (SELECT "Requests"                AS CONTEXT, 
                       t2.daily_day              AS DATE, 
                       GetTimeBand(t4.timestamp) AS TIMEBAND, 
                       nvl(t5.geography_id, 0)   AS GEOGRAPHY_ID,
                       t4.epg_channel            AS PLATFORM, 
                       t4.user_id                AS USER_ID, 
                       t4.device_type            AS DEVICE_TYPE, 
                       t4.status                 AS STATUS, 
                       t4.channel                AS NPVR_CHANNEL, 
                       t4.epg_show               AS NPVR_SHOW 
                FROM   target_npvr t4 
                       LEFT OUTER JOIN dim_calendar t2 
                                    ON ( t4.dt_reference = t2.day_identifier )
                       LEFT OUTER JOIN target_profiling t3
                                   ON ( t4.user_id = t3.userid )
                       LEFT OUTER JOIN dim_geography t5
                                   ON ( t3.regionname = t5.continent )
                                   AND ( t3.country = t5.state )
                                   AND ( t3.state = t5.region )
                WHERE  t4.dt_reference = ( date_sub(from_unixtime(unix_timestamp(), 'yyyy-MM-dd'), 1) ) 
                       AND t4.recording_action = 'CREATE') t0 
        GROUP  BY t0.context, 
                  t0.date, 
                  t0.timeband, 
                  t0.platform,
                  t0.geography_id,                   
                  t0.device_type, 
                  t0.status, 
                  t0.npvr_channel, 
                  t0.npvr_show) temp1;   
